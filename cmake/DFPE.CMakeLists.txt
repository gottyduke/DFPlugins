cmake_minimum_required(VERSION 3.21)

# singleton target across multiple projects
if(TARGET DKUtil)
	return() 
endif()

# standards & flags
set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_INTERPROCEDURAL_OPTIMIZATION ON)
set(CMAKE_INTERPROCEDURAL_OPTIMIZATION_DEBUG OFF)
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

include(GNUInstallDirs)

# info
project(
	dfpe
	LANGUAGES CXX
)

# out-of-source builds only
if(${PROJECT_SOURCE_DIR} STREQUAL ${PROJECT_BINARY_DIR})
	message(FATAL_ERROR "In-source builds are not allowed.")
endif()

# update script for sourcelist.cmake generation
execute_process(COMMAND powershell -NoProfile -ExecutionPolicy Bypass -File "${CMAKE_CURRENT_SOURCE_DIR}/!update.ps1" "DISTRIBUTE")

macro(fipch target_project target_int_dir)
get_target_property(target_type ${target_project} TYPE)
if(NOT "${target_type}" STREQUAL "INTERFACE_LIBRARY")
	target_compile_options(
		${target_project}
		PRIVATE
			/FI${CMAKE_BINARY_DIR}/${target_int_dir}/CMakeFiles/${target_project}.dir/$<CONFIG>/cmake_pch.hxx
	)
endif()
endmacro()

macro(define_external target_project)
get_target_property(target_type ${target_project} TYPE)
if(NOT "${target_type}" STREQUAL "INTERFACE_LIBRARY")
	target_compile_definitions(
		${target_project}
		PUBLIC
			WINVER=0x0601	# windows 7, minimum supported version by skyrim special edition
			_WIN32_WINNT=0x0601
	)

	target_compile_options(
		${target_project}
		PRIVATE
			"$<$<CONFIG:RELWITHDEBINFO>:/Ob2>"
	)
endif()
endmacro()

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")
set(BUILD_TESTS "Enable building of the unit tests." OFF)

add_compile_options(
	/MP
)

